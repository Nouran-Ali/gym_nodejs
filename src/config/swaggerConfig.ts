import swaggerJsdoc from 'swagger-jsdoc';

const options = {
  definition: {
    openapi: '3.0.0',
    info: {
      title: 'Power Pulse Gym API Documentation',
      version: '1.0.0',
    },
    servers: [{ url: 'http://127.0.0.1:5000/api/v1' }],
    components: {
      securitySchemes: {
        bearerAuth: {
          type: 'http',
          scheme: 'bearer',
          bearerFormat: 'JWT',
        },
      },
      schemas: {
        Login: {
          type: 'object',
          properties: {
            phoneNumber: {
              type: 'string',
              description: "User's phone number",
              example: '0123456789',
            },
            password: {
              type: 'string',
              minLength: 8,
              description: "User's password",
              example: '123456789',
            },
          },
          required: ['phoneNumber', 'password'],
        },
        CreateSecretary: {
          type: 'object',
          properties: {
            phoneNumber: {
              type: 'string',
              description: "Secretary's phone number",
              example: '01126918406',
            },
            fullName: {
              type: 'string',
              description: "Secretary's full name",
              example: 'youssef wael',
            },
            gender: {
              type: 'string',
              enum: ['MALE', 'FEMALE'],
              description: "Secretary's gender",
              example: 'MALE',
            },
            dob: {
              type: 'string',
              format: 'date',
              description: "Secretary's date of birth",
              example: '2001-02-10',
            },
            password: {
              type: 'string',
              description: "Secretary's password",
              example: '123456789',
            },
            confirm_password: {
              type: 'string',
              description: 'Confirm password',
              example: '123456789',
            },
          },
          required: [
            'phoneNumber',
            'fullName',
            'gender',
            'dob',
            'password',
            'confirm_password',
          ],
        },
        UpdateSecretary: {
          type: 'object',
          properties: {
            phoneNumber: {
              type: 'string',
              description: "Secretary's phone number",
              example: '01126918406',
            },
            fullName: {
              type: 'string',
              description: "Secretary's full name",
              example: 'youssef wael',
            },
            gender: {
              type: 'string',
              enum: ['MALE', 'FEMALE'],
              description: "Secretary's gender",
              example: 'MALE',
            },
            dob: {
              type: 'string',
              format: 'date',
              description: "Secretary's date of birth",
              example: '2001-02-10',
            },
          },
        },
        Trainee: {
          type: 'object',
          properties: {
            parcode: { type: 'string' },
            phoneNumber: { type: 'string' },
            fullName: { type: 'string' },
            gender: { type: 'string', enum: ['MALE', 'FEMALE'] },
            dob: { type: 'string', format: 'date' },
            subscriptionType: {
              type: 'string',
              enum: ['PRIVATE', 'NOT_PRIVATE'],
            },
            subscriptionStatus: {
              type: 'string',
              enum: ['ACTIVE', 'INACTIVE', 'PENDING'],
            },
            subscriptionDate: { type: 'string', format: 'date' },
            subscriptionStartDate: { type: 'string', format: 'date' },
            subscriptionMonths: { type: 'number' },
            subscriptionClasses: { type: 'number' },
            paid: { type: 'number' },
            reminder: { type: 'number' },
            trainingName: { type: 'string' },
            offerName: { type: 'string' },
            medicalProblem: { type: 'string' },
            surgeries: { type: 'string' },
            goal: { type: 'string' },
            sundayNote: { type: 'string' },
            mondayNote: { type: 'string' },
            tuesdayNote: { type: 'string' },
            wednesdayNote: { type: 'string' },
            thursdayNote: { type: 'string' },
            fridayNote: { type: 'string' },
            saturdayNote: { type: 'string' },
            generalNote: { type: 'string' },
            idFace: { type: 'string' },
            idBack: { type: 'string' },
          },
          required: [
            'parcode',
            'phoneNumber',
            'fullName',
            'gender',
            'dob',
            'subscriptionType',
            'subscriptionStatus',
            'subscriptionDate',
            'subscriptionStartDate',
            'subscriptionMonths',
            'subscriptionClasses',
            'paid',
            'reminder',
            'idFace',
            'idBack',
          ],
        },
        CreateTrainee: {
          type: 'object',
          properties: {
            parcode: { type: 'string', example: '001' },
            phoneNumber: { type: 'string', example: '01010932484' },
            fullName: { type: 'string' },
            gender: {
              type: 'string',
              enum: ['MALE', 'FEMALE'],
              example: 'MALE',
            },
            dob: { type: 'string', format: 'date', example: '2001-07-23' },
            subscriptionType: {
              type: 'string',
              enum: ['PRIVATE', 'NOT_PRIVATE'],
              example: 'PRIVATE',
            },
            subscriptionStatus: {
              type: 'string',
              enum: ['ACTIVE', 'INACTIVE', 'PENDING'],
              example: 'ACTIVE',
            },
            subscriptionStartDate: {
              type: 'string',
              format: 'date',
              example: '2024-06-10',
            },
            subscriptionMonths: { type: 'number', example: 3 },
            subscriptionClasses: { type: 'number', example: 12 },
            paid: { type: 'number', example: 350 },
            reminder: { type: 'number', example: 0 },
            idFace: { type: 'string', format: 'binary' },
            idBack: { type: 'string', format: 'binary' },
            trainingName: { type: 'string', nullable: true },
            offerName: { type: 'string', nullable: true },
            medicalProblem: { type: 'string', nullable: true },
            surgeries: { type: 'string', nullable: true },
            goal: { type: 'string', nullable: true },
            sundayNote: { type: 'string', nullable: true },
            mondayNote: { type: 'string', nullable: true },
            tuesdayNote: { type: 'string', nullable: true },
            wednesdayNote: { type: 'string', nullable: true },
            thursdayNote: { type: 'string', nullable: true },
            fridayNote: { type: 'string', nullable: true },
            saturdayNote: { type: 'string', nullable: true },
            generalNote: { type: 'string', nullable: true },
          },
          required: [
            'parcode',
            'phoneNumber',
            'fullName',
            'gender',
            'dob',
            'subscriptionType',
            'subscriptionStatus',
            'subscriptionStartDate',
            'subscriptionMonths',
            'subscriptionClasses',
            'paid',
            'reminder',
            'idFace',
            'idBack',
          ],
        },
        UpdateTrainee: {
          type: 'object',
          properties: {
            phoneNumber: { type: 'string', nullable: true },
            fullName: { type: 'string', nullable: true },
            gender: {
              type: 'string',
              enum: ['MALE', 'FEMALE'],
              nullable: true,
            },
            dob: { type: 'string', format: 'date', nullable: true },
            subscriptionType: {
              type: 'string',
              enum: ['PRIVATE', 'NOT_PRIVATE'],
              nullable: true,
            },
            subscriptionStatus: {
              type: 'string',
              enum: ['ACTIVE', 'INACTIVE', 'PENDING'],
              nullable: true,
            },
            subscriptionDate: {
              type: 'string',
              format: 'date',
              nullable: true,
            },
            subscriptionStartDate: {
              type: 'string',
              format: 'date',
              nullable: true,
            },
            subscriptionMonths: { type: 'number', nullable: true },
            subscriptionClasses: { type: 'number', nullable: true },
            remainingClasses: { type: 'number', nullable: true },
            subscriptionEndDate: {
              type: 'string',
              format: 'date',
              nullable: true,
            },
            paid: { type: 'number', nullable: true },
            reminder: { type: 'number', nullable: true },
            trainingName: { type: 'string', nullable: true },
            offerName: { type: 'string', nullable: true },
            medicalProblem: { type: 'string', nullable: true },
            surgeries: { type: 'string', nullable: true },
            goal: { type: 'string', nullable: true },
            sundayNote: { type: 'string', nullable: true },
            mondayNote: { type: 'string', nullable: true },
            tuesdayNote: { type: 'string', nullable: true },
            wednesdayNote: { type: 'string', nullable: true },
            thursdayNote: { type: 'string', nullable: true },
            fridayNote: { type: 'string', nullable: true },
            saturdayNote: { type: 'string', nullable: true },
            generalNote: { type: 'string', nullable: true },
            idFace: { type: 'string', format: 'binary', nullable: true },
            idBack: { type: 'string', format: 'binary', nullable: true },
          },
        },
        // You can include other schemas here if needed
      },
    },
    security: [
      {
        bearerAuth: [],
      },
    ],
  },
  apis: ['./src/routes/v1/*.ts'],
};

const swaggerSpec = swaggerJsdoc(options);

export default swaggerSpec;
